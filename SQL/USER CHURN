WITH enrollments AS
(SELECT *
FROM subscriptions
WHERE subscription_start < '2017-01-01'
AND (
  (subscription_end >= '2017-01-01')
  OR (subscription_end IS NULL)
)),
status AS 
(SELECT
CASE
  WHEN (subscription_end > '2017-01-31')
    OR (subscription_end IS NULL) THEN 0
    ELSE 1
  END as is_canceled,
CASE
    WHEN subscription_start < '2017-01-01'
      AND (
        (subscription_end >= '2017-01-01')
        OR (subscription_end IS NULL)
      ) THEN 1
    ELSE 0
  END as is_active
FROM enrollments
)

SELECT 1.0 * SUM(is_canceled) / SUM(is_active)
FROM status;





WITH months AS
(SELECT
  '2017-01-01' AS first_day,
  '2017-01-31' AS last_day
UNION
SELECT
  '2017-02-01' AS first_day,
  '2017-02-28' AS last_day
UNION
SELECT
  '2017-03-01' AS first_day,
  '2017-03-31' AS last_day
)
SELECT *
FROM months;


cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
-- Add status temporary table here
SELECT *
FROM status
LIMIT 100;




WITH months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
-- Add status temporary table here
status AS (SELECT id, first_day AS month,
CASE WHEN           
  (subscription_start < first_day)
  AND (
    subscription_end > first_day
    OR subscription_end IS NULL
  ) THEN 1
ELSE 0
END AS 'is_active',
CASE 
WHEN(subscription_end BETWEEN first_day AND last_day ) THEN 1 ELSE 0 
END AS is_canceled
FROM cross_join
)
status_aggregate AS
(SELECT month, 
SUM(is_active) AS 'active',
SUM(is_canceled) AS 'canceled' 
FROM status
GROUP BY 1
)

SELECT *
FROM status
LIMIT 100;

SELECT *
FROM status_aggregate;


SELECT month, (1.0*status_aggregate.canceled/status_aggregate.active) AS 'churn_rate' FROM status_aggregate;
